<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
 <mapper namespace="com.kh.mvc.merchant.model.mapper.MerchantMapper">

 	<sql id="selectMerchantMemberSql">
 		SELECT  MER_NO, 
			    MER_ID, 
			    MER_PASSWORD, 
			    MER_EMAIL,
			    MER_NAME, 
			    MER_PHONE,
			    MER_DATE,
			    BANK,
			    BANK_NUMBER,
			    MER_NICK, 
			    STATUS, 
			    MER_IMG_ORIGINAL, 
			    MER_IMG_RENAME, 
			    MER_IDCARD,
			    CATE_NO, 
			    GREETING
		FROM MERCHANT
 	</sql>
 


 	<sql id="ReservListSql">
		SELECT 
		RES_NO, 
		HB_NO, 
		MEM_NO, 
		RES_NAME, 
		RES_PHONE, 
		RES_COUNT, 
		RES_DATE, 
		TAKE_DATE, 
		PAY_FEE, 
		RES_ATTEND, 
		RES_STATUS, 
		CAL_STATUS 
		FROM RESERVE
		WHERE RES_STATUS = 'Y'
		AND HB_NO = #{hbNo}
	</sql>
	
	 <sql id="CalculationListSql">
		SELECT 
		CAL_NO, 
		STATUS, 
		PAY_NO, 
		MER_NO, 
		CAL_FINISH 
		FROM CALCULATION
	</sql>
	
 	<resultMap type="Merchant" id="merchantmemberResultMap">
 		<id property="merNo" column="MER_NO"/>
 		<result property="merId" column="MER_ID" />
 		<result property="merPassword" column="MER_PASSWORD"/>
 		<result property="merEmail" column="MER_EMAIL"/>
 		<result property="merName" column="MER_NAME"/>
 		<result property="merPhone" column="MER_PHONE"/>
 		<result property="merDate" column="MER_DATE"/>
 		<result property="bank" column="BANK"/>
 		<result property="bankNumber" column="BANK_NUMBER"/>
 		<result property="merNick" column="MER_NICK"/>
 		<result property="status" column="STATUS"/>
 		<result property="merImgOriginal" column="MER_IMG_ORIGINAL"/>
 		<result property="merImgRename" column="MER_IMG_RENAME"/>
 		<result property="merIDCARD" column="MER_IDCARD"/>
 		<result property="cateNo" column="CATE_NO"/>
 		<result property="greeting" column="GREETING"/>
 	</resultMap>
 	
 	<resultMap type="Reserve" id="ReservListResultMap">
		<id property="resNo" column="RES_NO"/>
		<result property="hbNo" column="HB_NO" />
		<result property="merNo" column="MER_NO"/>
		<result property="memId" column="MEM_ID"/>
		<result property="memNo" column="MEM_NO" />
		<result property="resName" column="RES_NAME" />
		<result property="resPhone" column="RES_PHONE" />
		<result property="resCount" column="RES_COUNT" />
		<result property="resDate" column="RES_DATE" />
		<result property="takeDate" column="TAKE_DATE" />
		<result property="payFee" column="PAY_FEE" />
		<result property="resAttend" column="RES_ATTEND" />
		<result property="resStatus" column="RES_STATUS" />
		<result property="calStatus" column="CAL_STATUS" />
		<result property="calFinish" column="CAL_FINISH"/>
	</resultMap>
	
 	<resultMap type="Calculation" id="CalculationListResultMap">
		<id property="calNo" column="CAL_NO"/>
		<result property="status" column="STATUS" />
		<result property="payNo" column="PAY_NO"/>
		<result property="merNo" column="MER_NO"/>
		<result property="calFinish" column="CAL_FINISH"/>
	</resultMap>
	
 	<select id="selectMerchantMember" parameterType="string" resultMap="merchantmemberResultMap">
 		<include refid="selectMerchantMemberSql" />
		WHERE MER_ID = #{merId} AND STATUS ='Y'
 	</select>
 	
 	<insert id="insertMerchantMember" parameterType="Merchant"
 		useGeneratedKeys="true" keyColumn="MER_NO" keyProperty="merNo" >

		INSERT INTO MERCHANT (
			    MER_NO, 
			    MER_ID, 
			    MER_PASSWORD, 
			    MER_EMAIL,
			    MER_NAME, 
			    MER_PHONE,
			    MER_DATE,
			    BANK,
			    BANK_NUMBER,
			    MER_NICK,
			    STATUS, 
			    MER_IMG_ORIGINAL, 
			    MER_IMG_RENAME, 
			    MER_IDCARD,
			    CATE_NO,
			    GREETING 
		) VALUES(
			SEQ_MERNO.NEXTVAL, 
			#{merId},
			#{merPassword},
			#{merEmail},
			#{merName},
			#{merPhone},
			#{merDate},
			#{bank},
			#{bankNumber},
			#{merNick},
			DEFAULT,
			#{merImgOriginal},
			#{merImgRename},
			#{merIDCARD},
			DEFAULT,
			#{greeting}
		)
 	</insert>
 	
 	<sql id="HobbyListSql">
		SELECT HB_NO,
		MER_NO,
		CATE_NO,
		HB_TITLE,
		HB_SUMMARY,
		HB_STARTDATE,
		HB_FEE,
		HB_DISCOUNT_RATE,
		HB_DISCOUNT_STATUS,
		HB_ENDDATE,
		HB_IMGS_ORI,
		HB_IMGS_RENAME,
		HB_THUM_ORI,
		HB_THUM_RENAME,
		HB_DETAIL_ORI,
		HB_DETAIL_RENAME,
		HB_DETAIL_INFO,
		HB_INFO,
		HB_LOCATION
		FROM HOBBY
		WHERE
		STATUS = 'Y'
	</sql>

	<sql id="cateListSql">
		SELECT
		CATE_NO,
		CATE_NAME
		FROM
		CATEGORY
	</sql>
	
	
	
	
	<resultMap type="Hobby" id="HobbyListResultMap">
		<id property="hbNo" column="HB_NO" />
		<result property="merNo" column="MER_NO" />
		<result property="cateNo" column="CATE_NO" />
		<result property="cateName" column="CATE_NAME" />
		<result property="hbTitle" column="HB_TITLE" />
		<result property="hbSummary" column="HB_SUMMARY" />
		<result property="hbFee" column="HB_FEE" />
		<result property="hbDiscountRate" column="HB_DISCOUNT_RATE" />
		<result property="hbDiscountStatus" column="HB_DISCOUNT_STATUS" />
		<result property="hbStartDate" column="HB_STARTDATE" />
		<result property="hbEndDate" column="HB_ENDDATE" />
		<result property="hbImgsOri" column="HB_IMGS_ORI" />
		<result property="hbImgsRename" column="HB_IMGS_RENAME" />
		<result property="hbThumOri" column="HB_THUM_ORI" />
		<result property="hbThumRename" column="HB_THUM_RENAME" />
		<result property="hbDetailOri" column="HB_DETAIL_ORI" />
		<result property="hbDetailRename" column="HB_DETAIL_RENAME" />
		<result property="hbDetailInfo" column="HB_DETAIL_INFO" />
		<result property="hbInfo" column="HB_INFO" />
		<result property="hbLocation" column="HB_LOCATION" />
	</resultMap>
		
		
	<resultMap type="Category" id="CateListResultMap">
		<id property="cateNo" column="CATE_NO" />
		<result property="cateName" column="CATE_NAME" />
	</resultMap>
		
		
	<select id="selectCateList" parameterType="map"
		resultMap="CateListResultMap">

		<include refid="cateListSql" />

		ORDER BY CATE_NO DESC
	</select>

	<select id="selectCateNameByNo" parameterType="_int"
		resultType="String">
			SELECT CATE_NAME
			FROM CATEGORY
			WHERE CATE_NO=#{cateNo}
	</select>
	

	<select id="selectHobbyList" parameterType="map"
		resultMap="HobbyListResultMap">

		SELECT H.HB_NO,
		H.MER_NO,
		H.CATE_NO,
		C.CATE_NAME,
		H.HB_TITLE,
		H.HB_SUMMARY,
		H.HB_STARTDATE,
		H.HB_FEE,
		H.HB_DISCOUNT_RATE,
		H.HB_DISCOUNT_STATUS,
		H.HB_ENDDATE,
		H.HB_IMGS_ORI,
		H.HB_IMGS_RENAME,
		H.HB_THUM_ORI,
		H.HB_THUM_RENAME,
		H.HB_INFO,
		H.HB_LOCATION
		FROM HOBBY H
		JOIN CATEGORY C ON(H.CATE_NO = C.CATE_NO)
		WHERE H.STATUS = 'Y'

		ORDER BY
		H.HB_NO DESC
	</select>
	
	<select id="selectHobbyMerList" parameterType="map"
		resultMap="HobbyListResultMap">

		SELECT H.HB_NO,
		H.MER_NO,
		H.CATE_NO,
		C.CATE_NAME,
		H.HB_TITLE,
		H.HB_SUMMARY,
		H.HB_STARTDATE,
		H.HB_FEE,
		H.HB_DISCOUNT_RATE,
		H.HB_DISCOUNT_STATUS,
		H.HB_ENDDATE,
		H.HB_IMGS_ORI,
		H.HB_IMGS_RENAME,
		H.HB_THUM_ORI,
		H.HB_THUM_RENAME,
		H.HB_INFO,
		H.HB_LOCATION
		FROM HOBBY H
		JOIN CATEGORY C ON(H.CATE_NO = C.CATE_NO)
		WHERE H.STATUS = 'Y' 
		AND H.MER_NO = #{merNo} 

		ORDER BY
		H.HB_NO DESC
	</select>
	
	<select id="selectHobbyCount" parameterType="map"
		resultType="_int">
		SELECT COUNT(*)
		FROM HOBBY
		WHERE STATUS='Y'
	</select>
	
	<select id="selectReserveCount" parameterType="map"
		resultType="_int">
		SELECT COUNT(*)
		FROM RESERVE
		WHERE HB_NO=#{hbNo}
	</select>
	
	<select id="selectCalculateCount" parameterType="map"
		resultType="_int">
		SELECT COUNT(*)
		FROM CALCULATION
		WHERE STATUS='N'
		AND CAL_FINISH='N'
	</select>
	
	
	<select id="selectHobbyCalList" parameterType="map"
		resultMap="HobbyListResultMap">

	SELECT
		H.HB_NO,
		H.MER_NO,
		H.CATE_NO,
		C.CATE_NAME,
		H.HB_TITLE,
		H.HB_SUMMARY,
		H.HB_STARTDATE,
		H.HB_FEE,
		H.HB_DISCOUNT_RATE,
		H.HB_DISCOUNT_STATUS,
		H.HB_ENDDATE,
		H.HB_IMGS_ORI,
		H.HB_IMGS_RENAME,
		H.HB_THUM_ORI,
		H.HB_THUM_RENAME,
		H.HB_INFO,
		H.HB_LOCATION,
	(SELECT SUM(PAY_FEE) AS HB_TOTALFEE FROM RESERVE WHERE HB_NO=H.HB_NO AND CAL_STATUS='N') AS HB_TOTALFEE
	
	FROM HOBBY H
	JOIN CATEGORY C ON(H.CATE_NO = C.CATE_NO)
	WHERE H.STATUS = 'Y' 
	AND H.MER_NO = #{merNo}
	
	ORDER BY
	H.HB_NO DESC
	</select>
	

	<!-- 취미 검색 -->
	<select id="selectHobbyByNo" parameterType="_int"
		resultMap="HobbyListResultMap">
		<include refid="HobbyListSql" />
		AND HB_NO=#{hbNo}
	</select>
	

	<!-- 취미 등록 -->
	<insert id="insertHobby" parameterType="map"
		useGeneratedKeys="true" keyProperty="hbNo" keyColumn="HB_NO">
		INSERT INTO
		HOBBY(
		HB_NO,
		MER_NO,
		CATE_NO,
		HB_TITLE,
		HB_FEE,
		HB_DISCOUNT_RATE,
		HB_DISCOUNT_STATUS,
		HB_SUMMARY,
		HB_STARTDATE,
		HB_ENDDATE,
		HB_IMGS_ORI,
		HB_IMGS_RENAME,
		HB_THUM_ORI,
		HB_THUM_RENAME,
		HB_DETAIL_ORI,
		HB_DETAIL_RENAME,
		HB_DETAIL_INFO,
		HB_INFO,
		HB_LOCATION,
		STATUS
		)
		VALUES(
		SEQ_HOBBY_NO.NEXTVAL,
		1,
		#{cateNo},
		#{hbTitle},
		TO_NUMBER(#{hbFee}),
		TO_NUMBER(#{hbDiscountRate}),
		#{hbDiscountStatus},
		#{hbSummary},
		TO_DATE(#{hbStartDate},'YYYY-MM-DD'),
		TO_DATE(#{hbEndDate},'YYYY-MM-DD'),
		#{hbImgsOri},
		#{hbImgsRename},
		#{hbThumOri},
		#{hbThumRename},
		#{hbDetailOri},
		#{hbDetailRename},
		#{hbDetailInfo},
		#{hbInfo},
		#{hbLocation},
		'Y'
		)
	</insert>
	
	<update id="updateHobby" parameterType="map">
	UPDATE HOBBY
	SET
	CATE_NO = #{cateNo},
	HB_TITLE = #{hbTitle},
	HB_SUMMARY = #{hbSummary},
	HB_FEE = TO_NUMBER(#{hbFee}),
	<if test="hbDiscountStatus != null">
	HB_DISCOUNT_RATE = TO_NUMBER(#{hbDiscountRate}),
	HB_DISCOUNT_STATUS = #{hbDiscountStatus},
	</if>
	<if test="hbDiscountStatus == null">
	HB_DISCOUNT_RATE = NULL,
	HB_DISCOUNT_STATUS = DEFAULT,
	</if>
	HB_STARTDATE = TO_DATE(#{hbStartDate},'YYYY-MM-DD'),
	HB_ENDDATE = TO_DATE(#{hbEndDate},'YYYY-MM-DD'),
	<if test="hbImgsOri != null">
	HB_IMGS_ORI = #{hbImgsOri},
	HB_IMGS_RENAME = #{hbImgsRename},
	</if>
	<if test="hbThumOri != null">
	HB_THUM_ORI = #{hbThumOri},
	HB_THUM_RENAME = #{hbThumRename},
	</if>
	HB_INFO = #{hbInfo},
	HB_LOCATION = #{hbLocation},
	<if test="hbDetailOri != null">
	HB_DETAIL_ORI = #{hbDetailOri},
	HB_DETAIL_RENAME = #{hbDetailRename},
	</if>
	HB_DETAIL_INFO = #{hbDetailInfo}
	WHERE
	HB_NO = #{hbNo}
	</update>
	
	<!-- 업데이트시 추가이미지 삭제버튼 -->
	<update id="imgsDelete">
	UPDATE HOBBY
	SET
	HB_IMGS_ORI = NULL,
	HB_IMGS_RENAME = NULL
	WHERE
	HB_NO = #{hbNo}
	</update>
	
	<select id="selectReserveList" parameterType="map"
		resultMap="ReservListResultMap">
		SELECT 
		R.RES_NO, 
		R.HB_NO,
		H.MER_NO,
		R.MEM_NO,
		M.MEM_ID, 
		R.RES_NAME, 
		R.RES_PHONE, 
		R.RES_COUNT, 
		R.RES_DATE, 
		R.TAKE_DATE, 
		R.PAY_FEE, 
		R.RES_ATTEND, 
		R.RES_STATUS, 
		R.CAL_STATUS 
		FROM RESERVE R
		JOIN HOBBY H ON(R.HB_NO=H.HB_NO)
		JOIN MEMBER M ON(R.MEM_NO=M.MEM_NO)
		WHERE RES_STATUS = 'Y'
		AND RES_ATTEND = 'Y' 
		AND R.HB_NO = #{hbNo}
		AND R.CAL_STATUS='N'
		ORDER BY
		R.RES_DATE DESC
	</select>
	
	<select id="selectCalWaitList" parameterType="map"
		resultMap="ReservListResultMap">
		SELECT 
		R.RES_NO, 
		R.HB_NO,
		H.MER_NO,
		R.MEM_NO,
		M.MEM_ID, 
		R.RES_NAME, 
		R.RES_PHONE, 
		R.RES_COUNT, 
		R.RES_DATE, 
		R.TAKE_DATE, 
		R.PAY_FEE, 
		R.RES_ATTEND, 
		R.RES_STATUS, 
		R.CAL_STATUS 
		FROM RESERVE R
		JOIN HOBBY H ON(R.HB_NO=H.HB_NO)
		JOIN MEMBER M ON(R.MEM_NO=M.MEM_NO)
		JOIN CALCULATION C ON(R.RES_NO=C.PAY_NO)
		WHERE RES_STATUS = 'Y'
		AND RES_ATTEND = 'Y'
		AND C.STATUS='Y'
		AND C.CAL_FINISH='N'
		ORDER BY
		R.RES_DATE DESC
	</select>
	
	<select id="selectCalFinishList" parameterType="map"
		resultMap="ReservListResultMap">
		SELECT 
		R.RES_NO, 
		R.HB_NO,
		H.MER_NO,
		R.MEM_NO,
		M.MEM_ID, 
		R.RES_NAME, 
		R.RES_PHONE, 
		R.RES_COUNT, 
		R.RES_DATE, 
		R.TAKE_DATE, 
		R.PAY_FEE, 
		R.RES_ATTEND, 
		R.RES_STATUS, 
		R.CAL_STATUS 
		FROM RESERVE R
		JOIN HOBBY H ON(R.HB_NO=H.HB_NO)
		JOIN MEMBER M ON(R.MEM_NO=M.MEM_NO)
		JOIN CALCULATION C ON(R.RES_NO=C.PAY_NO)
		WHERE
		C.CAL_FINISH='Y'
		ORDER BY
		R.RES_DATE DESC
	</select>
	
	 <update id="reserveUpdateStatus" parameterType="Reserve">
 		UPDATE RESERVE
 		SET
 			CAL_STATUS = 'Y'
		WHERE RES_NO = #{resNo}
		
	</update>
 			
 			
	<insert id="insertCalApply" parameterType="map">
		INSERT INTO
		CALCULATION(
		CAL_NO,
		STATUS,
		PAY_NO,
		MER_NO,
		CAL_FINISH
		)
		VALUES(
		SEQ_CAL_NO.NEXTVAL,
		'Y',
		#{resNo},
		#{merNo},
		DEFAULT
		)
	</insert>

	<!-- qna, reply관련 mapper -->
	
	<sql id="qnaListSql">
		SELECT
		Q.QNA_NO,
		Q.HB_NO,
		H.HB_TITLE,
		Q.MEM_NO,
		M.MEM_ID,
		Q.QNA_TITLE,
		Q.QNA_CONTENT,
		Q.STATUS,
		Q.QNA_DATE,
		Q.QNA_SECURE
		FROM QNA Q
		JOIN HOBBY H ON(Q.HB_NO = H.HB_NO)
		JOIN MEMBER M ON(Q.MEM_NO = M.MEM_NO)
	</sql>
	
	<sql id="replyList">
		SELECT
		R.REPLY_NO,
		R.QNA_NO,
		R.MER_NO,
		M.MER_ID,
		R.REPLY_CONTENT,
		R.REPLAY_DATE
		FROM REPLY R
		JOIN MERCHANT M ON(R.MER_NO = M.MER_NO)
	</sql>
	
	<resultMap type="Reply" id="ReplyListResultMap">
		<id property="replyNo" column="REPLY_NO" />
		<result property="qnaNo" column="QNA_NO" />
		<result property="merNo" column="MER_NO" />
		<result property="merId" column="MER_ID" />
		<result property="replyContent" column="REPLY_CONTENT" />
		<result property="replayDate" column="REPLAY_DATE" />
	</resultMap>
	
	<resultMap type="Qna" id="qnaListResultMap">
		<id property="qnaNo" column="QNA_NO" />
		<result property="hbNo" column="HB_NO" />
		<result property="hbTitle" column="HB_TITLE" />
		<result property="memNo" column="MEM_NO" />
		<result property="memId" column="MEM_ID" />
		<result property="qnaTitle" column="QNA_TITLE" />
		<result property="qnaContent" column="QNA_CONTENT" />
		<result property="status" column="STATUS" />
		<result property="qnaDate" column="QNA_DATE" />
		<result property="qnaSecure" column="QNA_SECURE" />
	</resultMap>
	
	
	
	<select id="selectQnaCount" resultType="_int">
		SELECT COUNT(*)
		FROM QNA
		WHERE HB_NO = #{hbNo}
	</select>

	<select id="selectQnaList" resultMap="qnaListResultMap">
		<include refid="qnaListSql"></include>
		WHERE Q.HB_NO = #{hbNo}
		AND Q.STATUS = 'Y'
		ORDER BY Q.QNA_NO DESC
	</select>
	
	<select id="selectReplyList" resultMap="ReplyListResultMap"
		parameterType="_int">
		<include refid="replyList" />
		WHERE R.QNA_NO = #{qnaNo}
		ORDER BY R.QNA_NO DESC
	</select>
	
		<insert id="saveReply" parameterType="map"
		useGeneratedKeys="true" keyProperty="replyNo" keyColumn="REPLY_NO">
		INSERT INTO
		REPLY(
		REPLY_NO,
		QNA_NO,
		MER_NO,
		REPLY_CONTENT,
		REPLAY_DATE
		)VALUES(
		SEQ_REPLY_NO.NEXTVAL,
		#{qnaNo},
		#{merNo},
		#{replyContent},
		DEFAULT
		)
	</insert>
	
		
	<update id="updateReply" parameterType="map">
		UPDATE REPLY
		SET
		REPLY_CONTENT=#{replyContent},
		REPLAY_DATE=SYSDATE
		WHERE
		REPLY_NO = #{replyNo}
	</update>
	
	
	
	<delete id="deleteReply" parameterType="map">
		DELETE
		FROM REPLY
		WHERE REPLY_NO = #{replyNo}
	</delete>


	<!--  상인이 개설한 취미의 개수(지영) -->
	<select id="selectHobbyCountByMerNo" parameterType="_int" resultType="_int">
		SELECT COUNT(*)
		FROM HOBBY
		WHERE STATUS = 'Y'
		AND MER_NO = #{merNo}
	</select>
	
	<!-- 상인이 개설한 취미 목록 조회(지영)-->
	<select id="getHobbyListByMerNo" parameterType="_int"
		resultMap="HobbyListResultMap">
		<include refid="HobbyListSql" />
		AND MER_NO=#{merNo}
		
		ORDER BY HB_NO DESC
	</select>

	<!--  취미에 해당하는 예약 수 (지영) -->
	<select id="selectReserveCountByHbNo" parameterType="_int" resultType="_int">
		SELECT COUNT(*) 
			FROM RESERVE 
			WHERE HB_NO = #{hbNo} 
			AND RES_STATUS = 'Y'
	</select>
	
	<!--  취미에 해당하는 예약 목록 조회 (지영) -->
	<select id="getReserveListByHbNo" parameterType="_int"
		resultMap="ReservListResultMap">
		SELECT 
			R.RES_NO, 
			R.HB_NO, 
			R.MEM_NO, 
			H.MER_NO, 
			M.MEM_ID,
			R.RES_NAME, 
			R.RES_PHONE, 
			R.RES_COUNT, 
			R.RES_DATE, 
			R.TAKE_DATE, 
			R.PAY_FEE, 
			R.RES_ATTEND, 
			R.RES_STATUS, 
			R.CAL_STATUS 
		FROM RESERVE R
		JOIN HOBBY H ON(R.HB_NO = H.HB_NO) 
		JOIN MEMBER M ON(R.MEM_NO = M.MEM_NO) 
		WHERE R.HB_NO =#{hbNo}
		
		ORDER BY TAKE_DATE DESC
	</select>
	
	<!--  예약 변경을 위한 예약 상태 확인 -->
	<select id="selectResStatusByNo" parameterType="hashMap"
		resultType="String">
		SELECT RES_STATUS FROM RESERVE 
		WHERE RES_ATTEND = 'N' AND HB_NO = #{hbNo} AND RES_NO=#{resNo}
	</select>
	
	<!--  예약 변경(취소) -->
	<update id="resCancle" parameterType="hashMap">
		UPDATE RESERVE 
			SET RES_STATUS = 'N' 
			WHERE RES_ATTEND = 'N' AND HB_NO = #{hbNo} AND RES_NO=#{resNo}
	</update>

	<!-- 출석관리 리스트 조회 -->
	<select id="selectReserveByTakeDate" parameterType="map"
		resultMap="ReservListResultMap">
		SELECT 
			R.RES_NO, 
			R.HB_NO,
			R.MEM_NO, 
			M.MEM_ID,
			R.RES_NAME, 
			R.RES_PHONE, 
			R.RES_COUNT, 
			R.RES_DATE, 
			R.TAKE_DATE,
			R.PAY_FEE, 
			R.RES_ATTEND, 
			R.RES_STATUS, 
			R.CAL_STATUS 
		FROM RESERVE R 
		JOIN MEMBER M ON(R.MEM_NO = M.MEM_NO) 
		WHERE R.HB_NO = #{hbNo}
		AND TO_CHAR(TAKE_DATE,'YY-MM-DD') = #{takeDate}
		</select>

			<!--  예약 변경을 위한 예약 상태 확인 -->
	<select id="selectResAttendByNo" parameterType="hashMap"
		resultType="String">
		SELECT RES_ATTEND FROM RESERVE 
		WHERE HB_NO = #{hbNo} AND RES_NO=#{resNo}
	</select>

		
			<!--  출석여부 변경 상태 확인 -->
	<!--  예약 변경(취소) -->
	<update id="resAttendY" parameterType="hashMap">
		UPDATE RESERVE 
			SET RES_ATTEND = 'Y' 
			WHERE HB_NO = #{hbNo} AND RES_NO=#{resNo}
	</update>
	
	<update id="resAttendN" parameterType="hashMap">
		UPDATE RESERVE 
			SET RES_ATTEND = 'N' 
			WHERE HB_NO = #{hbNo} AND RES_NO=#{resNo}
	</update>


	<!-- 후기 관련 sql-->
	<sql id="ReviewListSql">
			SELECT R.RV_NO,
			R.HB_NO,
			R.MEM_NO,
			M.MEM_NAME,
			M.MEM_IMG_RENAME,
			R.RV_SCORE,
			R.RV_CONTENT,
			R.RV_CREATEDATE,
			R.RV_MODIFYDATE,
			R.GOOD_REVIEW,
			R.RV_ORIGINAL_FILENAME,
			R.RV_RENAME_FILENAME
			FROM REVIEW R
			JOIN MEMBER M ON(R.MEM_NO = M.MEM_NO)
			JOIN HOBBY H ON(R.HB_NO = H.HB_NO)
			WHERE R.STATUS = 'Y'
			
		</sql>
		
		<resultMap type="Review" id="ReviewListResultMap">
		<id property="rvNo" column="RV_NO" />
		<result property="hbNo" column="HB_NO" />
		<result property="memNo" column="MEM_NO" />
		<result property="memName" column="MEM_NAME" />
		<result property="memImgRename" column="MEM_IMG_RENAME" />
		<result property="rvScore" column="RV_SCORE" />
		<result property="rvContent" column="RV_CONTENT" />
		<result property="rvCreateDate" column="RV_CREATEDATE" />
		<result property="rvModifyDate" column="RV_MODIFYDATE" />
		<result property="goodReview" column="GOOD_REVIEW" />
		<result property="rvOriginalFilename"
			column="RV_ORIGINAL_FILENAME" />
		<result property="rvRenameFilename" column="RV_RENAME_FILENAME" />
	</resultMap>


	<select id="selectReviewCount" parameterType="_int"
		resultType="_int">
		SELECT COUNT(*)
		FROM REVIEW R
		JOIN HOBBY H ON(R.HB_NO=H.HB_NO)
		WHERE R.STATUS='Y'
		AND H.MER_NO =
		#{merNo}
	</select>
	
	<select id="selectReviewList" parameterType="_int"
		resultMap="ReviewListResultMap">
		<include refid="ReviewListSql" />
		AND H.MER_NO = #{merNo} 
		ORDER BY R.RV_NO DESC
	</select>
	
	<select id="selectReviewListByNo" parameterType="_int"
		resultMap="ReviewListResultMap">
		<include refid="ReviewListSql" />
		AND H.HB_NO = #{hbNo} 
		ORDER BY R.RV_NO DESC
	</select>
	
	<select id="selectHobbyTitle" parameterType="_int"
	resultMap="HobbyListResultMap">
		SELECT H.HB_TITLE,
		H.HB_NO
		FROM HOBBY H
		JOIN MERCHANT M ON(H.MER_NO = M.MER_NO)
		WHERE M.MER_NO = #{merNo}
	</select>
	
	

 </mapper>