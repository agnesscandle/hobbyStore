<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
 <mapper namespace="com.kh.mvc.member.model.mapper.MemberMapper">
 	<sql id="selectMemberSql">
 		SELECT  MEM_NO, 
			    MEM_ID, 
			    MEM_PASSWORD, 
			    MEM_EMAIL,
			    MEM_NAME, 
			    MEM_PHONE, 
			    STATUS, 
			    MEM_IMG_ORIGINAL, 
			    MEM_IMG_RENAME, 
			    MEM_DATE,
			    CATE_NO
		FROM MEMBER
 	</sql>
 
 	<resultMap type="Member" id="memberResultMap">
 		<id property="memNo" column="MEM_NO"/>
 		<result property="memId" column="MEM_ID" />
 		<result property="memPassword" column="MEM_PASSWORD"/>
 		<result property="memEmail" column="MEM_EMAIL"/>
 		<result property="memName" column="MEM_NAME"/>
 		<result property="memPhone" column="MEM_PHONE"/>
 		<result property="status" column="STATUS"/>
 		<result property="memImgOriginal" column="MEM_IMG_ORIGINAL"/>
 		<result property="memImgRename" column="MEM_IMG_RENAME"/>
 		<result property="status" column="STATUS"/>
 		<result property="memDate" column="MEM_DATE"/>
 		<result property="cateNo" column="CATE_NO"/>
 	</resultMap>
 	
 	<select id="selectMember" parameterType="string" resultMap="memberResultMap">
 		<include refid="selectMemberSql" />
		WHERE MEM_ID = #{memId} AND STATUS ='Y'
 	</select>
 	
 	<!-- 이메일 중복 검사 -->
 	<select id="searchEmail" parameterType="string" resultMap="memberResultMap">
 		<include refid="selectMemberSql" />
		WHERE MEM_EMAIL = #{memEmail} AND STATUS ='Y'
 	</select>
 	
	<!-- 아이디 찾기 -->
	<select id="findId" parameterType="String" resultMap="memberResultMap">
		SELECT MEM_ID FROM MEMBER 
		WHERE MEM_NAME = #{memName} 
		AND MEM_EMAIL = #{memEmail}
	</select>
 	
 	<select id="findByPhone" parameterType="String" resultMap="memberResultMap">
		SELECT 
			MEM_NO,
			MEM_ID,
			MEM_PASSWORD
		FROM MEMBER 
		WHERE 
			MEM_PHONE = #{memPhone}
		AND STATUS ='Y'
	</select>
	
 	<insert id="insertMember" parameterType="Member"
 		useGeneratedKeys="true" keyColumn="MEM_NO" keyProperty="memNo" >

		INSERT INTO MEMBER (
			MEM_NO,
			MEM_ID,
			MEM_PASSWORD,
			MEM_EMAIL,
			MEM_NAME,
			MEM_PHONE,
			STATUS,
			MEM_IMG_ORIGINAL,
			MEM_IMG_RENAME,
			MEM_DATE,
			CATE_NO
		) VALUES(
			SEQ_MEM_NO.NEXTVAL, 
			#{memId},
			#{memPassword},
			#{memEmail},
			#{memName},
			#{memPhone},
			DEFAULT,
			#{memImgOriginal},
			#{memImgRename},
			DEFAULT,
			#{cateNo}
		)
 	</insert>
 	
 	<!-- 비밀번호 업데이트 -->
 	<update id="updateMemPwd" parameterType="Member">
 		UPDATE MEMBER 
 		SET
 			MEM_PASSWORD = #{memPassword}
		WHERE MEM_NO = #{memNo}
	</update>
 			
 		
 		 
 	<update id="updateMember" parameterType="Member">
 		UPDATE MEMBER 
 		SET 
 			MEM_IMG_ORIGINAL = #{memImgOriginal},
 			MEM_IMG_RENAME = #{memImgRename},
 			MEM_NAME = #{memName},
 			MEM_PHONE = #{memPhone},
 			MEM_EMAIL = #{memEmail}
		WHERE MEM_NO = #{memNo}
 	</update>
 	
 	<update id="deleteMember" parameterType="_int">
 		UPDATE MEMBER
 		SET
 			STATUS='N'
 		WHERE
 			MEM_NO = #{memNo}
 	</update>
 	
 	
 	
 	
 	
 	
 	
 	
 	
 	<sql id="HobbyListSql">
		SELECT HB_NO,
		MER_NO,
		CATE_NO,
		HB_TITLE,
		HB_SUMMARY,
		HB_STARTDATE,
		HB_FEE,
		HB_DISCOUNT_RATE,
		HB_DISCOUNT_STATUS,
		HB_ENDDATE,
		HB_IMGS_ORI,
		HB_IMGS_RENAME,
		HB_THUM_ORI,
		HB_THUM_RENAME,
		HB_INFO,
		HB_LOCATION
		FROM HOBBY
		WHERE
		STATUS = 'Y'
	</sql>

	<sql id="cateListSql">
		SELECT
		CATE_NO,
		CATE_NAME
		FROM
		CATEGORY
	</sql>
	
	
	
	<resultMap type="Hobby" id="HobbyListResultMap">
		<id property="hbNo" column="HB_NO" />
		<result property="merNo" column="MER_NO" />
		<result property="cateNo" column="CATE_NO" />
		<result property="cateName" column="CATE_NAME" />
		<result property="hbTitle" column="HB_TITLE" />
		<result property="hbSummary" column="HB_SUMMARY" />
		<result property="hbFee" column="HB_FEE" />
		<result property="hbDiscountRate" column="HB_DISCOUNT_RATE" />
		<result property="hbDiscountStatus" column="HB_DISCOUNT_STATUS" />
		<result property="hbStartDate" column="HB_STARTDATE" />
		<result property="hbEndDate" column="HB_ENDDATE" />
		<result property="hbImgsOri" column="HB_IMGS_ORI" />
		<result property="hbImgsRename" column="HB_IMGS_RENAME" />
		<result property="hbThumOri" column="HB_THUM_ORI" />
		<result property="hbThumRename" column="HB_THUM_RENAME" />
		<result property="hbInfo" column="HB_INFO" />
		<result property="hbLocation" column="HB_LOCATION" />
	</resultMap>
		
		
		
	<select id="selectCateList" parameterType="map"
		resultMap="CateListResultMap">

		<include refid="cateListSql" />

		ORDER BY CATE_NO DESC
	</select>

	<select id="selectCateNameByNo" parameterType="_int"
		resultType="String">
			SELECT CATE_NAME
			FROM CATEGORY
			WHERE CATE_NO=#{cateNo}
	</select>
	
	

	<select id="selectHobbyList" parameterType="map"
		resultMap="HobbyListResultMap">

		SELECT H.HB_NO,
		H.MER_NO,
		H.CATE_NO,
		C.CATE_NAME,
		H.HB_TITLE,
		H.HB_SUMMARY,
		H.HB_STARTDATE,
		H.HB_FEE,
		H.HB_DISCOUNT_RATE,
		H.HB_DISCOUNT_STATUS,
		H.HB_ENDDATE,
		H.HB_IMGS_ORI,
		H.HB_IMGS_RENAME,
		H.HB_THUM_ORI,
		H.HB_THUM_RENAME,
		H.HB_INFO,
		H.HB_LOCATION
		FROM HOBBY H
		JOIN CATEGORY C ON(H.CATE_NO = C.CATE_NO)
		WHERE H.STATUS = 'Y'

		ORDER BY
		H.HB_NO DESC
	</select>
		<select id="selectHobbyCount" parameterType="map"
		resultType="_int">
		SELECT COUNT(*)
		FROM HOBBY
		WHERE STATUS='Y'
	</select>

	<!-- 취미 검색 -->
	<select id="selectHobbyByNo" parameterType="_int"
		resultMap="HobbyListResultMap">
		<include refid="HobbyListSql" />
		AND HB_NO=#{hbNo}
	</select>

	<!-- 취미 등록 -->
	<insert id="insertHobby" parameterType="map"
		useGeneratedKeys="true" keyProperty="hbNo" keyColumn="HB_NO">
		INSERT INTO
		HOBBY(
		HB_NO,
		MER_NO,
		CATE_NO,
		HB_TITLE,
		HB_FEE,
		HB_DISCOUNT_RATE,
		HB_DISCOUNT_STATUS,
		HB_SUMMARY,
		HB_STARTDATE,
		HB_ENDDATE,
		HB_IMGS_ORI,
		HB_IMGS_RENAME,
		HB_THUM_ORI,
		HB_THUM_RENAME,
		HB_INFO,
		HB_LOCATION,
		STATUS
		)
		VALUES(
		SEQ_HOBBY_NO.NEXTVAL,
		1,
		#{cateNo},
		#{hbTitle},
		TO_NUMBER(#{hbFee}),
		TO_NUMBER(#{hbDiscountRate}),
		#{hbDiscountStatus},
		#{hbSummary},
		TO_DATE(#{hbStartDate},'YYYY-MM-DD'),
		TO_DATE(#{hbEndDate},'YYYY-MM-DD'),
		#{hbImgsOri},
		#{hbImgsRename},
		#{hbThumOri},
		#{hbThumRename},
		#{hbInfo},
		#{hbLocation},
		'Y'
		)
	</insert>
		
 	
 </mapper>